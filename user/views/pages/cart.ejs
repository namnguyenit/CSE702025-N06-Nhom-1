<%- include('../partials/header') %>

<style>
    .cart-area-modern {
        background: #f7faff;
        padding: 48px 0 64px 0;
        min-height: 60vh;
    }
    .cart-card-modern {
        background: #fff;
        border-radius: 18px;
        box-shadow: 0 4px 32px rgba(37,109,255,0.08), 0 1.5px 8px rgba(0,0,0,0.06);
        padding: 32px 24px 24px 24px;
        margin-bottom: 32px;
        overflow-x: auto;
    }
    .cart-table-modern {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 18px;
    }
    .cart-table-modern th, .cart-table-modern td {
        font-size: 1.13rem;
        font-weight: 500;
        text-align: left;
        background: #fff;
        vertical-align: middle;
        border: none;
        padding: 18px 0 18px 0;
    }
    .cart-table-modern th {
        color: #888;
        font-weight: 700;
        border-bottom: 2px solid #eaeaea;
        padding-bottom: 12px;
        background: transparent;
    }
    .cart-table-modern tr:not(:last-child) td {
        border-bottom: 1px solid #eaeaea;
    }
    .cart-product-info-modern {
        display: flex;
        align-items: center;
        gap: 24px;
    }
    .cart-product-img-modern {
        width: 110px;
        height: 110px;
        border-radius: 14px;
        overflow: hidden;
        background: linear-gradient(135deg,#f7faff 60%,#eaf1ff 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 8px rgba(37,109,255,0.07);
        transition: box-shadow 0.2s;
    }
    .cart-product-img-modern img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        border-radius: 14px;
        transition: transform 0.3s;
    }
    .cart-product-img-modern:hover img {
        transform: scale(1.06) rotate(-1.5deg);
    }
    .cart-product-name-modern {
        font-size: 1.13rem;
        font-weight: 600;
        color: #222;
        margin-bottom: 0;
    }
    .cart-badge-modern {
        display: inline-block;
        background: #256DFF;
        color: #fff;
        border-radius: 12px;
        font-size: 0.98rem;
        padding: 2px 12px;
        margin-left: 8px;
        font-weight: 500;
    }
    .cart-badge-secondary-modern {
        background: #ff003c;
    }
    .cart-qty-group-modern {
        display: flex;
        align-items: center;
        border: 1.5px solid #eaeaea;
        border-radius: 12px;
        background: #fafbfc;
        width: 120px;
        height: 44px;
        overflow: hidden;
    }
    .cart-qty-btn-modern {
        width: 44px;
        height: 44px;
        border: none;
        background: #f4f6fa;
        color: #256DFF;
        font-size: 1.3rem;
        font-weight: 700;
        border-radius: 12px 0 0 12px;
        cursor: pointer;
        transition: background 0.2s;
    }
    .cart-qty-btn-modern:last-child {
        border-radius: 0 12px 12px 0;
    }
    .cart-qty-btn-modern:hover {
        background: #256DFF;
        color: #fff;
    }
    .cart-qty-input-modern {
        width: 32px;
        border: none;
        text-align: center;
        font-size: 1.1rem;
        background: transparent;
        outline: none;
    }
    .cart-remove-btn-modern {
        width: 38px;
        height: 38px;
        background: #f4f6fa;
        color: #888;
        border: none;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        cursor: pointer;
        transition: background 0.2s, color 0.2s;
    }
    .cart-remove-btn-modern:hover {
        background: #ffeded;
        color: #ff4d4f;
    }
    .cart-summary-modern {
        margin: 40px auto 0 auto;
        text-align: center;
        border-top: none;
        padding: 32px 32px 28px 32px;
        max-width: 380px;
        background: #fff;
        border-radius: 22px;
        box-shadow: 0 8px 32px rgba(37,109,255,0.13), 0 2px 12px rgba(0,0,0,0.07);
        position: relative;
        z-index: 2;
        min-width: 260px;
    }
    .cart-actions-modern {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 24px;
        margin: 32px auto 0 auto;
        max-width: 420px;
        flex-wrap: wrap;
    }
    .btn-modern {
        background: linear-gradient(90deg,#256DFF 0%,#ff003c 100%);
        color: #fff;
        border: 2px solid #256DFF;
        border-radius: 24px;
        padding: 14px 38px;
        font-size: 1.15rem;
        font-weight: 800;
        cursor: pointer;
        transition: background 0.2s, box-shadow 0.2s, transform 0.2s, color 0.2s, border 0.2s;
        text-decoration: none;
        display: inline-block;
        text-align: center;
        box-shadow: 0 4px 16px rgba(37,109,255,0.13), 0 1.5px 8px rgba(0,0,0,0.08);
        margin-bottom: 0;
        letter-spacing: 0.5px;
    }
    .btn-modern:hover, .btn-modern:focus {
        background: linear-gradient(90deg,#ff003c 0%,#256DFF 100%);
        color: #fff;
        border: 2px solid #ff003c;
        box-shadow: 0 6px 24px rgba(255,0,60,0.13), 0 2px 12px rgba(37,109,255,0.10);
        transform: translateY(-2px) scale(1.05);
    }
    .btn-outline-modern {
        background: #fff;
        color: #256DFF;
        border: 2.5px solid #256DFF;
        font-weight: 800;
        box-shadow: 0 2px 8px rgba(37,109,255,0.10);
    }
    .btn-outline-modern:hover, .btn-outline-modern:focus {
        background: #256DFF;
        color: #fff;
        border: 2.5px solid #ffffff;
        box-shadow: 0 6px 24px rgba(255,0,60,0.13), 0 2px 12px rgba(37,109,255,0.10);
    }
    .cart-summary-modern .summary-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: #256DFF;
        margin-bottom: 18px;
        letter-spacing: 0.5px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }
    .cart-summary-modern .summary-title i {
        font-size: 1.5rem;
        color: #ff003c;
    }
    .cart-summary-modern .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1.08rem;
        margin-bottom: 10px;
        color: #888;
        font-weight: 500;
    }
    .cart-summary-modern .summary-row .summary-label {
        color: #888;
        font-weight: 500;
    }
    .cart-summary-modern .summary-row .summary-value {
        color: #222;
        font-weight: 700;
        font-size: 1.13rem;
    }
    .cart-summary-modern .summary-row.shipping .summary-value {
        color: #00c48c;
        font-weight: 700;
        font-size: 1.13rem;
    }
    .cart-summary-modern .summary-row.total {
        font-size: 1.35rem;
        font-weight: 800;
        color: #ff003c;
        margin-top: 18px;
        margin-bottom: 0;
        background: linear-gradient(90deg,#256DFF 0%,#ff003c 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        letter-spacing: 0.5px;
    }
    .cart-summary-modern .summary-row.total .summary-label {
        color: #222;
        font-weight: 700;
        font-size: 1.18rem;
        -webkit-text-fill-color: initial;
    }
    .cart-summary-modern .summary-row.total .summary-value {
        color: #ff003c;
        font-size: 1.45rem;
        font-weight: 900;
        -webkit-text-fill-color: initial;
    }
    @media (max-width: 600px) {
        .cart-summary-modern {
            padding: 18px 8px 18px 8px;
            min-width: 0;
        }
        .cart-actions-modern {
            flex-direction: column;
            gap: 14px;
            max-width: 100%;
        }
        .btn-modern {
            width: 100%;
            min-width: 0 !important;
        }
    }
</style>

<main>
    <div class="slider-area ">
        <div class="single-slider slider-height2 d-flex align-items-center" style="background-image: url('/img/hero/category.jpg');">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="hero-cap text-center">
                            <h2>Giỏ hàng</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <section class="cart-area-modern">
        <div class="container">
            <% if (cart && cart.items && cart.items.length > 0) { %>
            <div class="cart-card-modern">
                <div class="table-responsive">
                    <table class="cart-table-modern">
                        <thead>
                            <tr>
                                <th style="width: 45%">Sản phẩm</th>
                                <th style="width: 15%">Đơn giá</th>
                                <th style="width: 20%">Số lượng</th>
                                <th style="width: 15%">Thành tiền</th>
                                <th style="width: 5%"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.items.forEach(item => { %>
                            <tr data-product-id="<%= item.product %>" data-type="<%= item.type %>" data-size="<%= item.size %>">
                                <td>
                                    <div class="cart-product-info-modern">
                                        <div class="cart-product-img-modern">
                                          <% if (item.image && item.image.startsWith('data:')) { %>
                                            <img src="<%= item.image %>" alt="<%= item.name %>" />
                                          <% } else { %>
                                            <img src="/img/no-image.png" alt="No image" />
                                          <% } %>
                                        </div>
                                        <div>
                                            <div class="cart-product-name-modern"><%= item.name %>
                                                <span class="cart-badge-modern"><%= item.size %></span>
                                                <span class="cart-badge-modern cart-badge-secondary-modern"><%= item.type %></span>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="summary-value"><%= item.price.toLocaleString('vi-VN') %> ₫</span>
                                </td>
                                <td>
                                    <div class="cart-qty-group-modern">
                                        <button class="cart-qty-btn-modern cart-qty-down" type="button" data-product-id="<%= item.product %>">-</button>
                                        <input class="cart-qty-input-modern cart-qty-input" type="number" name="quantity" value="<%= item.qty %>" min="1" max="<%= item.countInStock %>" data-product-id="<%= item.product %>" aria-label="Số lượng">
                                        <button class="cart-qty-btn-modern cart-qty-up" type="button" data-product-id="<%= item.product %>" data-stock="<%= item.countInStock %>">+</button>
                                    </div>
                                </td>
                                <td>
                                    <span class="summary-value item-total"><%= (item.price * item.qty).toLocaleString('vi-VN') %> ₫</span>
                                </td>
                                <td>
                                    <button class="cart-remove-btn-modern cart-remove-btn" data-product-id="<%= item.product %>" data-type="<%= item.type %>" data-size="<%= item.size %>"><i class="fas fa-trash-alt"></i></button>
                                </td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="cart-summary-modern">
                <div class="summary-title"><i class="fas fa-receipt"></i> Thông tin đơn hàng</div>
                <div class="summary-row">
                    <span class="summary-label">Tạm tính</span>
                    <span class="summary-value" id="cart-subtotal"><%= cart.items.reduce((sum, item) => sum + item.price * item.qty, 0).toLocaleString('vi-VN') %> ₫</span>
                </div>
                <div class="summary-row shipping">
                    <span class="summary-label">Vận chuyển</span>
                    <span class="summary-value">Miễn phí</span>
                </div>
                <div class="summary-row total">
                    <span class="summary-label">Tổng cộng</span>
                    <span class="summary-value" id="cart-total">
                        <%= (cart.items.reduce((sum, item) => sum + item.price * item.qty, 0)).toLocaleString('vi-VN') %> ₫
                    </span>
                </div>
            </div>
            <div class="cart-actions-modern" style="justify-content:center; margin-top: 32px;">
                <a class="btn-modern" href="/products">Tiếp tục mua sắm</a>
                <a class="btn-modern btn-outline-modern" href="/cart/checkout" style="min-width:160px;">Thanh toán</a>
            </div>
            <% } else { %>
            <div class="text-center section_padding">
                <h4>Giỏ hàng của bạn đang trống.</h4>
                <p>Vui lòng thêm sản phẩm vào giỏ trước khi thanh toán.</p>
                <a href="/products" class="btn-modern">Tiếp tục mua sắm</a>
            </div>
            <% } %>
        </div>
    </section>
</main>

<script>
function formatVND(num) {
    return num.toLocaleString('vi-VN') + ' ₫';
}
function updateCart(productId, qty) {
    return fetch('/cart/update', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, qty })
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            // Cập nhật lại số lượng và tổng tiền trên DOM
            const row = document.querySelector(`tr[data-product-id='${productId}']`);
            if (row) {
                const input = row.querySelector('.cart-qty-input');
                input.value = qty;
                // Lấy giá sản phẩm từ DOM
                const price = parseInt(row.querySelector('.summary-value').textContent.replace(/[^\d]/g, '')) || 0;
                const itemTotal = price * qty;
                row.querySelector('.item-total').textContent = formatVND(itemTotal);
            }
            // Cập nhật lại tổng phụ và tổng cộng
            let subtotal = 0;
            document.querySelectorAll('.item-total').forEach(el => {
                subtotal += parseInt(el.textContent.replace(/[^\d]/g, '')) || 0;
            });
            document.getElementById('cart-subtotal').textContent = formatVND(subtotal);
            document.getElementById('cart-total').textContent = formatVND(subtotal);
        } else {
            alert(data.message || 'Đã xảy ra lỗi, vui lòng thử lại!');
        }
    });
}
function removeFromCart(productId, type, size) {
    return fetch('/cart/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, type, size })
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            // Xóa dòng sản phẩm khỏi bảng
            const row = document.querySelector(`tr[data-product-id='${productId}'][data-type='${type}'][data-size='${size}']`);
            if (row) row.remove();
            // Cập nhật lại tổng phụ và tổng cộng
            let subtotal = 0;
            document.querySelectorAll('.item-total').forEach(el => {
                subtotal += parseInt(el.textContent.replace(/[^\d]/g, '')) || 0;
            });
            document.getElementById('cart-subtotal').textContent = formatVND(subtotal);
            document.getElementById('cart-total').textContent = formatVND(subtotal);
            // Nếu không còn sản phẩm, reload để hiển thị giao diện giỏ hàng trống
            if (document.querySelectorAll('tbody tr').length === 0) {
                location.reload();
            }
        } else {
            alert(data.message || 'Đã xảy ra lỗi, vui lòng thử lại!');
        }
    });
}
document.addEventListener('DOMContentLoaded', function() {
    // Đảm bảo không double submit
    let updating = {};
    // Tăng số lượng
    document.querySelectorAll('.cart-qty-up').forEach(btn => {
        btn.addEventListener('mousedown', function(e) {
            e.preventDefault();
            const productId = this.dataset.productId;
            if (updating[productId]) return;
            const input = document.querySelector(`.cart-qty-input[data-product-id='${productId}']`);
            let qty = parseInt(input.value) || 1;
            const max = parseInt(this.dataset.stock) || 99;
            if (qty < max) {
                qty++;
                updating[productId] = true;
                updateCart(productId, qty).finally(() => updating[productId] = false);
            }
        });
    });
    // Giảm số lượng
    document.querySelectorAll('.cart-qty-down').forEach(btn => {
        btn.addEventListener('mousedown', function(e) {
            e.preventDefault();
            const productId = this.dataset.productId;
            if (updating[productId]) return;
            const input = document.querySelector(`.cart-qty-input[data-product-id='${productId}']`);
            let qty = parseInt(input.value) || 1;
            if (qty > 1) {
                qty--;
                updating[productId] = true;
                updateCart(productId, qty).finally(() => updating[productId] = false);
            }
        });
    });
    // Nhập số lượng trực tiếp
    document.querySelectorAll('.cart-qty-input').forEach(input => {
        let lastValue = input.value;
        input.addEventListener('change', function(e) {
            const productId = this.dataset.productId;
            if (updating[productId]) return;
            let qty = parseInt(this.value) || 1;
            const max = parseInt(this.max) || 99;
            if (qty < 1) qty = 1;
            if (qty > max) qty = max;
            if (qty != lastValue) {
                updating[productId] = true;
                updateCart(productId, qty).finally(() => updating[productId] = false);
            }
            lastValue = qty;
        });
        input.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                this.blur();
            }
        });
    });
    // Xóa sản phẩm
    document.querySelectorAll('.cart-remove-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            const productId = this.dataset.productId;
            const type = this.dataset.type;
            const size = this.dataset.size;
            if (updating[productId + '_' + type + '_' + size]) return;
            if (window.Swal) {
                Swal.fire({
                    title: 'Xác nhận xóa',
                    text: 'Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Có',
                    cancelButtonText: 'Không',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        updating[productId + '_' + type + '_' + size] = true;
                        removeFromCart(productId, type, size).finally(() => updating[productId + '_' + type + '_' + size] = false);
                    }
                });
            } else {
                if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                    updating[productId + '_' + type + '_' + size] = true;
                    removeFromCart(productId, type, size).finally(() => updating[productId + '_' + type + '_' + size] = false);
                }
            }
        });
    });
});
</script>

<%- include('../partials/footer') %>